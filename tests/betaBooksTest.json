{
	"info": {
		"_postman_id": "e785bb67-0086-4982-9ab4-8fcb255e54e0",
		"name": "Books_Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "44467648",
		"_collection_link": "https://ali-9923282.postman.co/workspace/a63e7e07-b2d5-47ae-89f5-ebb7ce12a887/collection/44369905-e785bb67-0086-4982-9ab4-8fcb255e54e0?action=share&source=collection_link&creator=44467648"
	},
	"item": [
		{
			"name": "Get By ISBN",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const body = JSON.parse(pm.variables.replaceIn('{{body}}'));",
							"const response = pm.response.json();",
							"",
							"pm.test(\"Response status should be 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response body should have correct fields\", () => {",
							"    pm.expect(response).to.have.property('isbn13');",
							"    pm.expect(response).to.have.property('authors');",
							"    pm.expect(response).to.have.property('publication');",
							"    pm.expect(response).to.have.property('original_title');",
							"    pm.expect(response).to.have.property('title');",
							"    pm.expect(response).to.have.property('ratings');",
							"    pm.expect(response.ratings).to.have.property('average');",
							"    pm.expect(response.ratings).to.have.property('count');",
							"    pm.expect(response.ratings).to.have.property('rating_1');",
							"    pm.expect(response.ratings).to.have.property('rating_2');",
							"    pm.expect(response.ratings).to.have.property('rating_3');",
							"    pm.expect(response.ratings).to.have.property('rating_4');",
							"    pm.expect(response.ratings).to.have.property('rating_5');",
							"    pm.expect(response).to.have.property('icons');",
							"    pm.expect(response.icons).to.have.property('large');",
							"    pm.expect(response.icons).to.have.property('small');",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/books/isbn?isbn={{isbn13}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"books",
						"isbn"
					],
					"query": [
						{
							"key": "isbn",
							"value": "{{isbn13}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add a new book",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const { getRandomPublicationYear } = pm.require('@ali-9923282/utils');",
							"const { generateRandomISBN13 } = pm.require('@ali-9923282/utils');",
							"const { generateRandomRatingAmount } = pm.require('@ali-9923282/utils');",
							"const { calculateRatingSum } = pm.require('@ali-9923282/utils');",
							"const { calculateRatingAvg } = pm.require('@ali-9923282/utils');",
							"",
							"",
							"const isbn13 = generateRandomISBN13();",
							"pm.collectionVariables.set('isbn13', isbn13);",
							"",
							"",
							"const authors = pm.variables.replaceIn('{{$randomFirstName}}') + ' ' + pm.variables.replaceIn('{{$randomLastName}}');",
							"pm.collectionVariables.set('authors', authors);",
							"",
							"",
							"const publication_year = getRandomPublicationYear();",
							"pm.collectionVariables.set('publication_year', publication_year);",
							"",
							"",
							"const original_title = pm.variables.replaceIn('{{$randomWords}}');",
							"const title = original_title;",
							"pm.collectionVariables.set('original_title', original_title);",
							"pm.collectionVariables.set('title', title);",
							"",
							"",
							"const rating_1_star = generateRandomRatingAmount();",
							"const rating_2_star = generateRandomRatingAmount();",
							"const rating_3_star = generateRandomRatingAmount();",
							"const rating_4_star = generateRandomRatingAmount();",
							"const rating_5_star = generateRandomRatingAmount();",
							"",
							"pm.collectionVariables.set('rating_1_star', rating_1_star);",
							"pm.collectionVariables.set('rating_2_star', rating_2_star);",
							"pm.collectionVariables.set('rating_3_star', rating_3_star);",
							"pm.collectionVariables.set('rating_4_star', rating_4_star);",
							"pm.collectionVariables.set('rating_5_star', rating_5_star);",
							"",
							"",
							"const rating_count = calculateRatingSum(rating_1_star, rating_2_star, rating_3_star, rating_4_star, rating_5_star);",
							"const rating_avg = calculateRatingAvg(rating_1_star, rating_2_star, rating_3_star, rating_4_star, rating_5_star);",
							"",
							"pm.collectionVariables.set('rating_count', rating_count);",
							"pm.collectionVariables.set('rating_avg', rating_avg);",
							"",
							"// dummy links for now",
							"const image_url = \"http://example.com/large.jpg\";",
							"const image_small_url = \"http://example.com/small.jpg\";",
							"",
							"pm.collectionVariables.set('image_url', image_url);",
							"pm.collectionVariables.set('image_small_url', image_small_url);",
							"",
							"",
							"pm.collectionVariables.set(\"body\", JSON.stringify({",
							"    isbn13,",
							"    authors,",
							"    publication_year,",
							"    original_title,",
							"    title,",
							"    rating_avg,",
							"    rating_count,",
							"    rating_1_star,",
							"    rating_2_star,",
							"    rating_3_star,",
							"    rating_4_star,",
							"    rating_5_star,",
							"    image_url,",
							"    image_small_url",
							"}));",
							""
						],
						"type": "text/javascript",
						"packages": {
							"@ali-9923282/utils": {
								"id": "0196750e-c7b6-7bed-9c22-610a14e80f4a"
							}
						}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const utils = pm.require('@ali-9923282/utils');",
							"const{ isbn13, authors, publication_year, original_title,title,rating_avg,rating_count,rating_1_star,",
							"    rating_2_star,rating_3_star,rating_4_star,rating_5_star,image_url,image_small_url",
							"} = JSON.parse(pm.variables.replaceIn('{{body}}'));",
							"",
							"const response = pm.response.json();",
							"pm.test(\"Response status should be 201\", () =>",
							"    pm.response.to.have.status(201));",
							"",
							"pm.test(\"Response status should have a message\", () => {",
							"    pm.expect(response).to.haveOwnProperty(\"message\");",
							"    pm.expect(response.message).to.equal(\"Book successfully created\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {
							"@ali-9923282/utils": {
								"id": "0196750e-c7b6-7bed-9c22-610a14e80f4a"
							}
						}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{body}}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base_url}}/books/book"
			},
			"response": []
		},
		{
			"name": "Add a new book invalid isbn",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const { getRandomPublicationYear } = pm.require('@ali-9923282/utils');",
							"const { generateRandomISBN13 } = pm.require('@ali-9923282/utils');",
							"const { generateRandomRatingAmount } = pm.require('@ali-9923282/utils');",
							"const { calculateRatingSum } = pm.require('@ali-9923282/utils');",
							"const { calculateRatingAvg } = pm.require('@ali-9923282/utils');",
							"",
							"",
							"",
							"",
							"",
							"const authors = pm.variables.replaceIn('{{$randomFirstName}}') + ' ' + pm.variables.replaceIn('{{$randomLastName}}');",
							"pm.collectionVariables.set('authors', authors);",
							"",
							"",
							"const publication_year = getRandomPublicationYear();",
							"pm.collectionVariables.set('publication_year', publication_year);",
							"",
							"",
							"const original_title = pm.variables.replaceIn('{{$randomWords}}');",
							"const title = original_title;",
							"pm.collectionVariables.set('original_title', original_title);",
							"pm.collectionVariables.set('title', title);",
							"",
							"",
							"const rating_1_star = generateRandomRatingAmount();",
							"const rating_2_star = generateRandomRatingAmount();",
							"const rating_3_star = generateRandomRatingAmount();",
							"const rating_4_star = generateRandomRatingAmount();",
							"const rating_5_star = generateRandomRatingAmount();",
							"",
							"pm.collectionVariables.set('rating_1_star', rating_1_star);",
							"pm.collectionVariables.set('rating_2_star', rating_2_star);",
							"pm.collectionVariables.set('rating_3_star', rating_3_star);",
							"pm.collectionVariables.set('rating_4_star', rating_4_star);",
							"pm.collectionVariables.set('rating_5_star', rating_5_star);",
							"",
							"",
							"const rating_count = calculateRatingSum(rating_1_star, rating_2_star, rating_3_star, rating_4_star, rating_5_star);",
							"const rating_avg = calculateRatingAvg(rating_1_star, rating_2_star, rating_3_star, rating_4_star, rating_5_star);",
							"",
							"pm.collectionVariables.set('rating_count', rating_count);",
							"pm.collectionVariables.set('rating_avg', rating_avg);",
							"",
							"// dummy links for now",
							"const image_url = \"http://example.com/large.jpg\";",
							"const image_small_url = \"http://example.com/small.jpg\";",
							"",
							"pm.collectionVariables.set('image_url', image_url);",
							"pm.collectionVariables.set('image_small_url', image_small_url);",
							"",
							"",
							"pm.collectionVariables.set(\"body\", JSON.stringify({",
							"    isbn13 : 123,",
							"    authors,",
							"    publication_year,",
							"    original_title,",
							"    title,",
							"    rating_avg,",
							"    rating_count,",
							"    rating_1_star,",
							"    rating_2_star,",
							"    rating_3_star,",
							"    rating_4_star,",
							"    rating_5_star,",
							"    image_url,",
							"    image_small_url",
							"}));",
							""
						],
						"type": "text/javascript",
						"packages": {
							"@ali-9923282/utils": {
								"id": "0196750e-c7b6-7bed-9c22-610a14e80f4a"
							}
						}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const{ isbn13, authors, publication_year, original_title,title,rating_avg,rating_count,rating_1_star,",
							"    rating_2_star,rating_3_star,rating_4_star,rating_5_star,image_url,image_small_url",
							"} = JSON.parse(pm.variables.replaceIn('{{body}}'));",
							"",
							"const response = pm.response.json();",
							"pm.test(\"Response status should be 400\", () =>",
							"    pm.response.to.have.status(400));",
							"",
							"pm.test(\"Response status should have a message\", () => {",
							"    pm.expect(response).to.haveOwnProperty(\"message\");",
							"    pm.expect(response.message).to.equal(\"isbn13 must be a 13-digit number\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{body}}\n  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base_url}}/books/book"
			},
			"response": []
		},
		{
			"name": "Add a new book Missing Parameters",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const { getRandomPublicationYear } = pm.require('@ali-9923282/utils');",
							"const { generateRandomISBN13 } = pm.require('@ali-9923282/utils');",
							"const { generateRandomRatingAmount } = pm.require('@ali-9923282/utils');",
							"const { calculateRatingSum } = pm.require('@ali-9923282/utils');",
							"const { calculateRatingAvg } = pm.require('@ali-9923282/utils');",
							"",
							"",
							"const isbn13 = generateRandomISBN13();",
							"pm.collectionVariables.set('isbn13', isbn13);",
							"",
							"",
							"const authors = pm.variables.replaceIn('{{$randomFirstName}}') + ' ' + pm.variables.replaceIn('{{$randomLastName}}');",
							"pm.collectionVariables.set('authors', authors);",
							"",
							"",
							"const publication_year = getRandomPublicationYear();",
							"pm.collectionVariables.set('publication_year', publication_year);",
							"",
							"",
							"const original_title = pm.variables.replaceIn('{{$randomWords}}');",
							"const title = original_title;",
							"pm.collectionVariables.set('original_title', original_title);",
							"pm.collectionVariables.set('title', title);",
							"",
							"",
							"const rating_1_star = generateRandomRatingAmount();",
							"const rating_2_star = generateRandomRatingAmount();",
							"const rating_3_star = generateRandomRatingAmount();",
							"const rating_4_star = generateRandomRatingAmount();",
							"const rating_5_star = generateRandomRatingAmount();",
							"",
							"pm.collectionVariables.set('rating_1_star', rating_1_star);",
							"pm.collectionVariables.set('rating_2_star', rating_2_star);",
							"pm.collectionVariables.set('rating_3_star', rating_3_star);",
							"pm.collectionVariables.set('rating_4_star', rating_4_star);",
							"pm.collectionVariables.set('rating_5_star', rating_5_star);",
							"",
							"",
							"const rating_count = calculateRatingSum(rating_1_star, rating_2_star, rating_3_star, rating_4_star, rating_5_star);",
							"const rating_avg = calculateRatingAvg(rating_1_star, rating_2_star, rating_3_star, rating_4_star, rating_5_star);",
							"",
							"pm.collectionVariables.set('rating_count', rating_count);",
							"pm.collectionVariables.set('rating_avg', rating_avg);",
							"",
							"//image url's ommited",
							"",
							"",
							"pm.collectionVariables.set(\"body\", JSON.stringify({",
							"    isbn13,",
							"    authors,",
							"    publication_year,",
							"    original_title,",
							"    title,",
							"    rating_avg,",
							"    rating_count,",
							"    rating_1_star,",
							"    rating_2_star,",
							"    rating_3_star,",
							"    rating_4_star,",
							"    rating_5_star,",
							"}));",
							""
						],
						"type": "text/javascript",
						"packages": {
							"@ali-9923282/utils": {
								"id": "0196750e-c7b6-7bed-9c22-610a14e80f4a"
							}
						}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const{ isbn13, authors, publication_year, original_title,title,rating_avg,rating_count,rating_1_star,",
							"    rating_2_star,rating_3_star,rating_4_star,rating_5_star",
							"} = JSON.parse(pm.variables.replaceIn('{{body}}'));",
							"",
							"const response = pm.response.json();",
							"pm.test(\"Response status should be 400\", () =>",
							"    pm.response.to.have.status(400));",
							"",
							"pm.test(\"Response status should have a message\", () => {",
							"    pm.expect(response).to.haveOwnProperty(\"message\");",
							"    pm.expect(response.message).to.equal(\"Missing field: image_url\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{body}}\n  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base_url}}/books/book"
			},
			"response": []
		},
		{
			"name": "Get By ISBN Missing Query Parameter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const body = JSON.parse(pm.variables.replaceIn('{{body}}'));",
							"const response = pm.response.json();",
							"",
							"pm.test(\"Response status should be 400\", () =>",
							"    pm.response.to.have.status(400));",
							"",
							"pm.test(\"Response status should have a message\", () => {",
							"    pm.expect(response).to.haveOwnProperty(\"message\");",
							"    pm.expect(response.message).to.equal(\"Missing required query parameter: isbn\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/books/isbn?",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"books",
						"isbn"
					],
					"query": [
						{
							"key": "",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get By ISBN Does Not Exist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const body = JSON.parse(pm.variables.replaceIn('{{body}}'));",
							"const response = pm.response.json();",
							"",
							"pm.test(\"Response status should be 404\", () =>",
							"    pm.response.to.have.status(404));",
							"",
							"pm.test(\"Response status should have a message\", () => {",
							"    pm.expect(response).to.haveOwnProperty(\"message\");",
							"    pm.expect(response.message).to.equal(\"No book found with ISBN 1111111111111\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/books/isbn?isbn=1111111111111",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"books",
						"isbn"
					],
					"query": [
						{
							"key": "isbn",
							"value": "1111111111111"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get by author missing query parameter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const body = JSON.parse(pm.variables.replaceIn('{{body}}'));",
							"const response = pm.response.json();",
							"",
							"pm.test(\"Response status should be 400\", () =>",
							"    pm.response.to.have.status(400));",
							"",
							"pm.test(\"Response status should have a message\", () => {",
							"    pm.expect(response).to.haveOwnProperty(\"message\");",
							"    pm.expect(response.message).to.equal(\"Missing required query parameter: authors\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{base_url}}/books/author"
			},
			"response": []
		},
		{
			"name": "Get by author does not exist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const body = JSON.parse(pm.variables.replaceIn('{{body}}'));",
							"const response = pm.response.json();",
							"",
							"pm.test(\"Response status should be 404\", () =>",
							"    pm.response.to.have.status(404));",
							"",
							"pm.test(\"Response status should have a message\", () => {",
							"    pm.expect(response).to.haveOwnProperty(\"message\");",
							"    pm.expect(response.message).to.equal('No book found with authors \"abcdefg\"');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/books/author?authors=\"abcdefg\"",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"books",
						"author"
					],
					"query": [
						{
							"key": "authors",
							"value": "\"abcdefg\""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get by author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const body = JSON.parse(pm.variables.replaceIn('{{body}}'));",
							"const response = pm.response.json();",
							"",
							"pm.test(\"Response status should be 200\", () =>",
							"    pm.response.to.have.status(200));",
							"",
							"    pm.test(\"Response should contain a 'books' array\", () => {",
							"    pm.expect(response).to.have.property('books');",
							"    pm.expect(response.books).to.be.an('array');",
							"});",
							"",
							"pm.test(\"Each book object should have correct fields\", () => {",
							"    response.books.forEach(book => {",
							"        pm.expect(book).to.have.property('isbn13');",
							"        pm.expect(book).to.have.property('authors');",
							"        pm.expect(book).to.have.property('publication');",
							"        pm.expect(book).to.have.property('original_title');",
							"        pm.expect(book).to.have.property('title');",
							"        pm.expect(book).to.have.property('ratings');",
							"        pm.expect(book).to.have.property('icons');",
							"",
							"        // Check nested ratings fields",
							"        pm.expect(book.ratings).to.have.property('average');",
							"        pm.expect(book.ratings).to.have.property('count');",
							"        pm.expect(book.ratings).to.have.property('rating_1');",
							"        pm.expect(book.ratings).to.have.property('rating_2');",
							"        pm.expect(book.ratings).to.have.property('rating_3');",
							"        pm.expect(book.ratings).to.have.property('rating_4');",
							"        pm.expect(book.ratings).to.have.property('rating_5');",
							"",
							"        // Check nested icons fields",
							"        pm.expect(book.icons).to.have.property('large');",
							"        pm.expect(book.icons).to.have.property('small');",
							"    });",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/books/author?authors=Josephine Harber",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"books",
						"author"
					],
					"query": [
						{
							"key": "authors",
							"value": "Josephine Harber"
						}
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "isbn13",
			"value": ""
		},
		{
			"key": "authors",
			"value": ""
		},
		{
			"key": "publication_year",
			"value": ""
		},
		{
			"key": "original_title",
			"value": ""
		},
		{
			"key": "title",
			"value": ""
		},
		{
			"key": "rating_1_star",
			"value": ""
		},
		{
			"key": "rating_2_star",
			"value": ""
		},
		{
			"key": "rating_3_star",
			"value": ""
		},
		{
			"key": "rating_4_star",
			"value": ""
		},
		{
			"key": "rating_5_star",
			"value": ""
		},
		{
			"key": "rating_count",
			"value": ""
		},
		{
			"key": "rating_avg",
			"value": ""
		},
		{
			"key": "image_url",
			"value": ""
		},
		{
			"key": "image_small_url",
			"value": ""
		},
		{
			"key": "body",
			"value": ""
		}
	]
}